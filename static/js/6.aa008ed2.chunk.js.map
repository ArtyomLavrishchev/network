{"version":3,"sources":["Components/Login/Login.tsx"],"names":["maxLength40","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaURL","onSubmit","createField","required","Input","title","type","checked","src","alt","className","s","formSummaryError","connect","state","isAuth","auth","captchaUrl","login","props","to","fomData","email","password","rememberMe","captcha"],"mappings":"oIAAA,gGAmBMA,EAAcC,YAAiB,IA2B/BC,EAAiBC,YAA2C,CAACC,KAAM,SAAlDD,EAzB6E,SAAC,GAK1F,IAHHE,EAGE,EAHFA,aACAC,EAEE,EAFFA,MACAC,EACE,EADFA,WAEJ,OACI,0BAAMC,SAAUH,GACXI,YAAY,QAAS,QAAS,CAACC,IAAUV,GAAcW,IAAO,KAAM,CAACC,MAAO,0BAC5EH,YAAY,WAAY,WAAY,CAACC,IAAUV,GAAcW,IAAO,KAAM,CAACE,KAAM,WAAYD,MAAO,gBACpGH,YAAY,KAAM,aAAc,KAAME,IAAO,cAAe,CAACE,KAAM,WAAYC,SAAS,IACxFP,GAAc,6BACX,yBAAKQ,IAAKR,EAAYS,IAAK,YAC1BP,YAAY,qBAAsB,UAAW,CAACC,KAAWC,IAAO,KAAM,OAE1EL,GAAS,yBAAKW,UAAWC,IAAEC,kBACvBb,GAEL,6BACI,8CAqCDc,uBALS,SAACC,GAAD,MAAiD,CACrEC,OAAQD,EAAME,KAAKD,OACnBf,WAAYc,EAAME,KAAKC,cAGa,CAACC,WAA1BL,EArBuD,SAACM,GAInE,OAAIA,EAAMJ,OACC,kBAAC,IAAD,CAAUK,GAAI,YAIrB,6BACI,qCACA,kBAACzB,EAAD,CAAgBM,SAVP,SAACoB,GACdF,EAAMD,MAAMG,EAAQC,MAAOD,EAAQE,SAAUF,EAAQG,WAAYH,EAAQI,UASjCzB,WAAYmB,EAAMnB","file":"static/js/6.aa008ed2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormOwnProps = {\r\n    captchaURL: string | null\r\n}\r\nconst maxLength40 = maxLengthCreator(40)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = (\r\n    {\r\n        handleSubmit,\r\n        error,\r\n        captchaURL\r\n    }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required, maxLength40], Input, null, {title: \"temalggt540@gmail.com\"})}\r\n            {createField(\"Password\", \"password\", [required, maxLength40], Input, null, {type: \"password\", title: 'Valeria0404'})}\r\n            {createField(null, \"rememberMe\", null, Input, \"remember me\", {type: \"checkbox\", checked: true})}\r\n            {captchaURL && <div>\r\n                <img src={captchaURL} alt={'captcha'}/>\r\n                {createField('Symbols from image', \"captcha\", [required], Input, null, null)}\r\n            </div>}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: \"login\"})(LoginForm)\r\n\r\ntype MapStateToPropsType = {\r\n    captchaURL: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    const onSubmit = (fomData: FormDataType) => {\r\n        props.login(fomData.email, fomData.password, fomData.rememberMe, fomData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}
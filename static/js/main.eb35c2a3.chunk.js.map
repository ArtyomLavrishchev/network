{"version":3,"sources":["api/api.ts","utils/object-helpers.ts","redux/users-reducer.ts","Components/Dialogs/DialogItem/DialogsItem.module.css","Components/Dialogs/Message/Message.module.css","assets/images/loader.svg","Components/Navbar/Navbar.module.css","serviceWorker.ts","Components/Navbar/Navbar.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","redux/app-reducer.ts","App.tsx","redux/redux-store.ts","index.tsx","redux/auth-reducer.ts","Components/Dialogs/Dialogs.module.css","Components/Common/FormsControls/FormsControls.module.css","Components/Common/Preloader/Preloader.tsx","utils/validators/validators.ts","Components/Header/Header.module.css","Components/Common/FormsControls/FormsControls.tsx","redux/profile-reducer.ts"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","id","post","resultCode","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","type","unfollowSuccess","setCurrentPage","page","toggleIsFetching","toggleIsFollowingProgress","requestUsers","dispatch","a","totalUsersCont","totalCount","count","followUnfollowFlow","apiMethod","actionCreator","bind","usersReducer","state","action","followed","filter","module","exports","Boolean","window","location","hostname","match","NavBar","className","s","nav","item","NavLink","to","activeClassName","activeLink","News","Music","Settings","SEND_MESSAGE","dialogs","name","img","messages","message","dialogsReducer","body","newMessageBody","DialogItem","props","path","dialog","src","Message","mes","maxLength15","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","text","placeholder","button","Dialogs","dialogsPage","messagesElements","m","key","dialogsElements","d","isAuth","dialogsItems","values","sendMessage","Redirect","compose","connect","auth","addMessageActionCreator","Header","header","alt","loginBlock","onClick","HeaderContainer","this","React","Component","initialized","actions","UsersContainer","lazy","ProfileContainer","Login","App","initializeApp","Suspense","fallback","Preloader","Route","render","DialogsContainer","withRouter","app","promise","getAuthUserData","Promise","all","reducers","combineReducers","profilePage","profileReducer","usersPage","authReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","SET_USER_DATA","setAuthUserData","payload","length","stopSubmit","_error","preloader","value","maxLength","FormControl","input","meta","touched","children","child","element","hasError","finalClassName","formControl","restProps","Input","createField","field","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","newPostText","addPostActionCreator","newPostBody","deletePostAC","postId","setProfileStatus","file","photos","getUserProfile","newPost","p"],"mappings":"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","file":"static/js/main.eb35c2a3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"3999e522-cb4e-4498-8ef3-a2f773a6c74f\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post(`follow/${id}`, {})\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    getProfile(userId: string) {\r\n        console.warn('Obsolete method. Please profileAPI objet.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status/', {status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put('profile/photo/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login/`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login/`)\r\n    }\r\n}","export const updateObjectInArray = (items: Array<any>, itemId: any, objPropName: string, newObjProps: any) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {ActionTypes, DispatchType, UserType} from \"./store\";\r\nimport {UsersMapStateToPropsType} from \"../Components/Users/UsersContainer\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW'\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW'\r\nconst SET_USERS = 'social-network/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USER_COUNT = 'social-network/users/SET_TOTAL_USER_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'social-network/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\nconst usersReducer = (state: UsersMapStateToPropsType = initialState, action: ActionTypes): UsersMapStateToPropsType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page}\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId),\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userID: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userID\r\n    } as const\r\n}\r\nexport const unfollowSuccess = (userID: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userID: userID\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    } as const\r\n};\r\nexport const setCurrentPage = (page: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        page\r\n    } as const\r\n};\r\nexport const setTotalUsersCount = (totalUsersCont: number) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        count: totalUsersCont\r\n    } as const\r\n};\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n};\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n};\r\n\r\nexport const requestUsers = (page: number, pageSize: number) =>\r\n    async (dispatch: DispatchType) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n        dispatch(setCurrentPage(page))\r\n    }\r\n\r\nconst followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: APIMethodType, actionCreator: ACType) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let resultCode = await apiMethod(userId)\r\n    if (resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userID: number) => {\r\n    return async (dispatch: DispatchType) => {\r\n        followUnfollowFlow(dispatch, userID, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userID: number) => {\r\n    return async (dispatch: DispatchType) => {\r\n        followUnfollowFlow(dispatch, userID, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n\r\n}\r\n\r\ntype APIMethodType = (id: number) => Promise<any>\r\ntype ACType = (userID: number) =>\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess>;\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__3YB8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mes\":\"Message_mes__2SJ4f\"};","module.exports = __webpack_public_path__ + \"static/media/loader.dc9a5222.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1gWkt\",\"item\":\"Navbar_item__3jhBU\",\"activeLink\":\"Navbar_activeLink__2cDz0\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default NavBar;","import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\"\r\n\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n","import {ActionTypes, MessagesPageType} from \"./store\";\r\n\r\nconst SEND_MESSAGE = \"social-network/dialogs/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Артём\",\r\n            img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRltvBEVwZUC1nI-q-4QnueJjvDFPOrHqBWig&usqp=CAU\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Алёна\",\r\n            img: \"https://topmsg.ru/wp-content/uploads/paren-v-pidzhake-i-kepke.jpg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Валерия\",\r\n            img: \"https://sun1-19.userapi.com/impg/c855032/v855032039/2231b7/6euQqUV0YMQ.jpg?size=200x0&quality=88&crop=6,5,1288,1288&sign=83bf255e018a05d0f8b73055341a71f7&c_uniq_tag=AHl_dkk5RHNoYgPMQ8zNoJj8ZqBCmaFOlda9WWmeP_k&ava=1\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Кирилл\",\r\n            img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR_RfqA1o6QkxYWBxk_-TCF28EBlasrxI-wWQ&usqp=CAU\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Таня\",\r\n            img: \"https://f1.upet.com/A_r2u6uZhnxA_x.jpg\"\r\n        }\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"How is your IT-incubator?\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"}\r\n    ]\r\n};\r\n\r\nexport const dialogsReducer = (state: MessagesPageType = initialState, action: ActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div>\r\n        <NavLink className={s.dialog} to={path}><img src={props.img}/>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    return <div className={s.mes}>{props.message}</div>\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsContainerType} from \"./DialogsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsContainerType> = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let messagesElements =\r\n        state.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem\r\n        key={d.id}\r\n        name={d.name}\r\n        id={d.id}\r\n        img={d.img}/>)\r\n\r\n    let addNewMessage = (values: FormDataType) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\nconst maxLength15 = maxLengthCreator(15)\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLength15]}\r\n                    component={Textarea}\r\n                    className={s.text}\r\n                    name={\"newMessageBody\"}\r\n                    placeholder={\"Enter your message\"}\r\n                />\r\n                <button className={s.button}>➤</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, MessagesPageType} from \"../../redux/store\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype OwnPropsType = {}\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: MessagesPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: RootStateRedux) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    // withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, RootStateRedux>(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AuthMapStateToPropsType} from \"./HeaderContainer\";\r\n\r\ntype HeaderType = AuthMapStateToPropsType & {\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/ru/thumb/3/37/Jumpman_logo.svg/1200px-Jumpman_logo.svg.png\"\r\n                alt={'avatar'}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}  <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\n\r\ntype OwnPropsType = {}\r\nexport type AuthMapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype AuthMapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\nexport type AuthPropsType = AuthMapStateToPropsType & AuthMapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux): AuthMapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\nexport default connect<AuthMapStateToPropsType, AuthMapDispatchToPropsType, OwnPropsType, RootStateRedux>(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {InferActionsTypes} from \"./redux-store\";\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    const promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n           dispatch(actions.initializedSuccess())\r\n        })\r\n};","import React from 'react';\nimport {Route, withRouter} from \"react-router-dom\"\nimport \"./App.css\";\nimport NavBar from \"./Components/Navbar/Navbar\";\nimport News from \"./Components/News/News\";\nimport Music from \"./Components/Music/Music\";\nimport {Settings} from \"./Components/Settings/Settings\";\n\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {RootStateRedux} from \"./redux/redux-store\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\n\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\nconst Login = React.lazy(() => import('./Components/Login/Login'));\n\ntype OwnPropsType = {}\ntype MapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: any\n}\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nclass App extends React.Component<AppPropsType> {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavBar/>\n                <div className=\"app-wrapper-content\">\n                    <React.Suspense fallback={<Preloader/>}>\n                        <Route path=\"/profile/:userId?\"\n                               render={() => <ProfileContainer/>}/>\n                        <Route path=\"/users\"\n                               render={() => <UsersContainer/>}/>\n                        <Route path=\"/login\" render={() => <Login/>}/>\n                    </React.Suspense>\n                    <Route path=\"/dialogs\"\n                           render={() => <DialogsContainer/>}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootStateRedux): MapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, RootStateRedux>(mapStateToProps, {initializeApp}))(App);\n","import {compose, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type RootStateRedux = ReturnType<typeof reducers> & ReturnType<typeof applyMiddleware>\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n","import {ActionTypes, DispatchType} from \"./store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type AuthReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state: AuthReducerType = initialState, action: ActionTypes): AuthReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {id, email, login, isAuth}\r\n    } as const\r\n};\r\nexport const getAuthUserData = () => async (dispatch: DispatchType) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: DispatchType) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PpnL\",\"dialogsItems\":\"Dialogs_dialogsItems__2CzU1\",\"messages\":\"Dialogs_messages__2F0gY\",\"dialog\":\"Dialogs_dialog__27aTc\",\"text\":\"Dialogs_text__2ddsK\",\"button\":\"Dialogs_button__3iZil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2x2Pb\",\"error\":\"FormsControls_error__1NuZ5\",\"formSummaryError\":\"FormsControls_formSummaryError__ytgZ7\"};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/loader.svg\";\r\n\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt={'preloader'}/>\r\n    </div>\r\n}\r\nexport default Preloader;","export const required = (value: any) => {\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if(value && value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3K1r5\",\"loginBlock\":\"Header_loginBlock__1zz0x\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = (\r\n    {\r\n        input, meta: {touched, error}, child, element, children\r\n    }: any) => {\r\n    const hasError = touched && error\r\n    const finalClassName = hasError ? `${s.formControl} ${s.error}` : s.formControl\r\n    return (\r\n        <div className={finalClassName}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (\r\n    placeholder: string | null,\r\n    name: string,\r\n    validate: Array<any> | null,\r\n    component: React.FC,\r\n    text: string | null,\r\n    restProps: any\r\n) => {\r\n    return (\r\n        <div className={s.field}>\r\n            <Field validate={validate} component={component} name={name} placeholder={placeholder} {...restProps}/>\r\n        </div>\r\n    )\r\n}","import {ActionTypes, DispatchType, ProfilePageType, ProfilePhotoType, ProfileType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"social-network/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"social-network/profile/SET_USER_PROFILE\";\r\nconst TOGGLE_IS_FETCHING = 'social-network/TOGGLE_IS_FETCHING';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profile/SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It's my first post.\", likesCount: 11},\r\n        {id: 3, message: \"abracadabra\", likesCount: 999},\r\n    ],\r\n    profile: null,\r\n    isFetching: false,\r\n    status: \"\",\r\n    newPostText: ''\r\n};\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionTypes): any => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 4,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SET_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO_SUCCESS :\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostBody: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    } as const\r\n}\r\nexport const deletePostAC = (postId: number) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setProfileStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    } as const\r\n}\r\nexport const savePhotoSuccess = (photos: ProfilePhotoType) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    } as const\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: DispatchType) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: DispatchType) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file: File) => async (dispatch: DispatchType) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId: string) => async (dispatch: DispatchType) => {\r\n    dispatch(toggleIsFetching(true))\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}
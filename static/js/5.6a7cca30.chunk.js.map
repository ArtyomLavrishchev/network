{"version":3,"sources":["assets/images/user-profile-icon-png.png","Components/Users/Users.module.css","Components/Common/Paginator/Paginator.module.css","Components/Users/User.tsx","Components/Users/Users.tsx","redux/users-selectors.ts","Components/Common/Paginator/Paginator.tsx","Components/Users/UsersSearchForm.tsx","Components/Users/UsersContainer.tsx"],"names":["module","exports","User","user","followingInProgress","unfollow","follow","className","s","wrapper","item","NavLink","to","id","src","photos","small","userPhoto","photo","alt","followed","disabled","some","onClick","unfollowed","name","status","Users","users","map","u","getUsers","state","usersPage","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","Paginator","React","memo","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","startPortion","useCallback","prevPortion","nextPortion","endPortion","paginator","filter","p","pageClass","selectedPage","key","e","validate","values","UsersSearchForm","initialValues","term","onSubmit","setSubmitting","isSubmitting","type","UsersContainer","pageNumber","props","requestUsers","this","Preloader","Component","compose","connect"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,mD,oBCC3CD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,KAAO,oBAAoB,WAAa,0BAA0B,SAAW,0B,oBCA7JD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,6BAA6B,MAAQ,yBAAyB,aAAe,gCAAgC,WAAa,gC,0JCYhLC,EAAgC,SAAC,GAMnC,IAJHC,EAIE,EAJFA,KACAC,EAGE,EAHFA,oBACAC,EAEE,EAFFA,SACAC,EACE,EADFA,OAEJ,OACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAEE,MACd,kBAACC,EAAA,EAAD,CAASC,GAAI,YAAcT,EAAKU,IAC5B,yBAAKC,IAAKX,EAAKY,OAAOC,MAAQb,EAAKY,OAAOC,MAAQC,IAC7CV,UAAWC,IAAEU,MACbC,IAAK,YAGbhB,EAAKiB,SACF,4BAAQb,UAAWC,IAAEY,SACbC,SAAUjB,EAAoBkB,MAAK,SAAAT,GAAE,OAAIA,IAAOV,EAAKU,MACrDU,QAAS,WACLlB,EAASF,EAAKU,MAH1B,UAOA,4BAAQN,UAAWC,IAAEgB,WACbH,SAAUjB,EAAoBkB,MAAK,SAAAT,GAAE,OAAIA,IAAOV,EAAKU,MACrDU,QAAS,WACLjB,EAAOH,EAAKU,MAHxB,WASR,6BACI,6BAAMV,EAAKsB,MACX,6BAAMtB,EAAKuB,QACX,wDACA,wDCvBDC,EAhBwB,SAAC,GAM7B,IAJHC,EAIE,EAJFA,MACAtB,EAGE,EAHFA,OACAD,EAEE,EAFFA,SACAD,EACE,EADFA,oBAEJ,OAAO,6BACFwB,EAAMC,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,CAAM3B,KAAM2B,EACNxB,OAAQA,EACRD,SAAUA,EACVD,oBAAqBA,S,eCrB1B2B,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUL,OAEdM,EAAc,SAACF,GACxB,OAAOA,EAAMC,UAAUE,UAEdC,EAAqB,SAACJ,GAC/B,OAAOA,EAAMC,UAAUI,iBAEdC,EAAiB,SAACN,GAC3B,OAAOA,EAAMC,UAAUM,aAEdC,EAAgB,SAACR,GAC1B,OAAOA,EAAMC,UAAUQ,YAEdC,EAAyB,SAACV,GACnC,OAAOA,EAAMC,UAAU7B,qB,2BCNduC,EAA0CC,IAAMC,MAAK,YAY9D,IAJO,IANHV,EAME,EANFA,SACAW,EAKE,EALFA,gBACAP,EAIE,EAJFA,YACAQ,EAGE,EAHFA,cACAC,EAEE,EAFFA,YACAP,EACE,EADFA,WAGEQ,EAAaC,KAAKC,KAAKL,EAAkBX,GACzCiB,EAAQ,GACLC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GAPtC,EAQoCQ,mBAAiB,GARrD,mBAQCC,EARD,KAQgBC,EARhB,KASAC,GAAqBF,EAAgB,GAAKT,EAAc,EACxDY,EAAqBH,EAAgBT,EAErCa,EAAeC,uBAAY,kBAAMJ,EAAiB,KAAI,CAACD,IACvDM,EAAcD,uBAAY,kBAAMJ,EAAiBD,EAAgB,KAAI,CAACA,IACtEO,EAAcF,uBAAY,kBAAMJ,EAAiBD,EAAgB,KAAI,CAACA,IACtEQ,EAAaH,uBAAY,kBAAMJ,EAAiBH,KAAe,CAACA,IAEtE,OAAO,yBAAKhD,UAAWC,IAAEC,SACrB,yBAAKF,UAAWC,IAAE0D,WACbT,EAAgB,GACjB,oCACI,4BAAQlC,QAASsC,GAAjB,SACA,4BAAQtC,QAASwC,GAAjB,SAEHX,EACIe,QAAO,SAAAC,GAAC,OAAIA,GAAKT,GAAqBS,GAAKR,KAC3C/B,KAAI,SAAAuC,GACD,IAAIC,EAAS,UAAM7D,IAAE4C,MAAR,YAAiBb,IAAgB6B,EAAI5D,IAAE8D,aAAe,GAAtD,YAA4D7B,EAAajC,IAAEiC,WAAa,IACrG,OAAO,0BACH8B,IAAKH,EACL7C,QAAS,SAACiD,GAAD,OAAOzB,EAAcqB,IAC9B7D,UAAW8D,GACdD,MAGRb,EAAeE,GAChB,oCACI,4BAAQlC,QAASyC,GAAjB,QACA,4BAAQzC,QAAS0C,GAAjB,a,SCvDVQ,EAAS,SAACC,GAEZ,MADe,IA8BJC,EA1BS,WAMpB,OACI,6BACI,kBAAC,IAAD,CACIC,cAAe,CAAEC,KAAM,IACvBJ,SAAUA,EACVK,SAVG,SAACJ,EAAD,IAEXK,EAF8G,EAAtEA,gBAE1B,MAUL,gBAAGC,EAAH,EAAGA,aAAH,OACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,OAAOxD,KAAK,SACxB,4BAAQwD,KAAK,SAAS5D,SAAU2D,GAAhC,cCUlBE,E,4MAMFnC,cAAgB,SAACoC,GAAwB,IAC9BhD,EAAY,EAAKiD,MAAjBjD,SACP,EAAKiD,MAAMC,aAAaF,EAAYhD,EAAU,K,kEAP7B,IAAD,EACgBmD,KAAKF,MAA9B7C,EADS,EACTA,YAAaJ,EADJ,EACIA,SACpBmD,KAAKF,MAAMC,aAAa9C,EAAaJ,EAAU,M,+BAS/C,OAAO,oCACH,kBAACQ,EAAD,CAAWR,SAAUmD,KAAKF,MAAMjD,SACrBW,gBAAiBwC,KAAKF,MAAM/C,gBAC5BE,YAAa+C,KAAKF,MAAM7C,YACxBQ,cAAeuC,KAAKvC,cACpBC,YAAa,GACbP,WAAY6C,KAAKF,MAAM3C,aACvB,kBAAC,EAAD,MACV6C,KAAKF,MAAM3C,WACR,kBAAC8C,EAAA,EAAD,MACA,kBAAC,EAAD,CACI3D,MAAO0D,KAAKF,MAAMxD,MAClBtB,OAAQgF,KAAKF,MAAM9E,OACnBD,SAAUiF,KAAKF,MAAM/E,SACrBD,oBAAqBkF,KAAKF,MAAMhF,2B,GA1BvBwC,IAAM4C,WA4CpBC,sBACXC,aAZkB,SAAC1D,GACnB,MAAO,CACHJ,MAAOG,EAASC,GAChBG,SAAUD,EAAYF,GACtBK,gBAAiBD,EAAmBJ,GACpCO,YAAaD,EAAeN,GAC5BS,WAAYD,EAAcR,GAC1B5B,oBAAqBsC,EAAuBV,MAM9B,CAAC1B,WAAQD,aAAUgF,mBAF1BI,CAGbP","file":"static/js/5.6a7cca30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-profile-icon-png.b3e90dfe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__3t5TF\",\"photo\":\"Users_photo__hC89A\",\"item\":\"Users_item__2bfch\",\"unfollowed\":\"Users_unfollowed__16N7O\",\"followed\":\"Users_followed__3qtTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Paginator_wrapper__1Xpzs\",\"paginator\":\"Paginator_paginator__3b19q\",\"pages\":\"Paginator_pages__3darZ\",\"selectedPage\":\"Paginator_selectedPage__1mYpy\",\"isFetching\":\"Paginator_isFetching__zhXV1\"};","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user-profile-icon-png.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../redux/store\";\r\n\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = (\r\n    {\r\n        user,\r\n        followingInProgress,\r\n        unfollow,\r\n        follow\r\n    }) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.item}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small ? user.photos.small : userPhoto}\r\n                         className={s.photo}\r\n                         alt={\"avatar\"}/>\r\n                </NavLink>\r\n\r\n                {user.followed ?\r\n                    <button className={s.followed}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>\r\n                        &#10007;\r\n                    </button> :\r\n                    <button className={s.unfollowed}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id)\r\n                            }}>\r\n                        &#10003;\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n                <div>\"user.location.country\"</div>\r\n                <div>\"user.location.city\"</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/store\";\r\nimport {User} from \"./User\";\r\n\r\nexport type UserPropsType = {\r\n    users: Array<UserType>\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst Users: React.FC<UserPropsType> = (\r\n    {\r\n        users,\r\n        follow,\r\n        unfollow,\r\n        followingInProgress\r\n    }) => {\r\n    return <div>\r\n        {users.map((u) =>\r\n            <User user={u}\r\n                  follow={follow}\r\n                  unfollow={unfollow}\r\n                  followingInProgress={followingInProgress}/>\r\n        )}\r\n    </div>\r\n}\r\nexport default Users;","import {RootStateRedux} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: RootStateRedux) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state: RootStateRedux) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: RootStateRedux) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: RootStateRedux) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: RootStateRedux) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: RootStateRedux) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport s from \"./Paginator.module.css\"\r\n\r\nexport type PaginatorPropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo((\r\n    {\r\n        pageSize,\r\n        totalItemsCount,\r\n        currentPage,\r\n        onPageChanged,\r\n        portionSize,\r\n        isFetching\r\n    }) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionNumber = portionNumber * portionSize;\r\n\r\n    const startPortion = useCallback(() => setPortionNumber(1), [portionNumber])\r\n    const prevPortion = useCallback(() => setPortionNumber(portionNumber - 1), [portionNumber])\r\n    const nextPortion = useCallback(() => setPortionNumber(portionNumber + 1), [portionNumber])\r\n    const endPortion = useCallback(() => setPortionNumber(portionCount), [portionCount])\r\n\r\n    return <div className={s.wrapper}>\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <>\r\n                <button onClick={startPortion}>START</button>\r\n                <button onClick={prevPortion}>PREV</button>\r\n            </>}\r\n            {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map(p => {\r\n                    let pageClass = `${s.pages} ${currentPage === p ? s.selectedPage : ''} ${isFetching ? s.isFetching : ''}`\r\n                    return <span\r\n                        key={p}\r\n                        onClick={(e) => onPageChanged(p)}\r\n                        className={pageClass}>\r\n                    {p}\r\n                </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <>\r\n                <button onClick={nextPortion}>NEXT</button>\r\n                <button onClick={endPortion}>END</button>\r\n            </>}\r\n        </div>\r\n    </div>\r\n})\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst validate=(values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nconst UsersSearchForm = () => {\r\n    const submit = (values: { term: string }, { setSubmitting }: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n\r\n        setSubmitting(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ term: ''}}\r\n                validate={validate}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersSearchForm;","import {connect} from \"react-redux\";\r\nimport {follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport UsersSearchForm from \"./UsersSearchForm\";\r\n\r\ntype OwnPropsType = {}\r\nexport type  UsersMapStateToPropsType = {\r\n    users: any\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (UserId: number) => void\r\n    unfollow: (UserId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number, term: string) => void\r\n}\r\ntype PropsType = UsersMapStateToPropsType & MapDispatchToPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize, '');\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize, '');\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Paginator pageSize={this.props.pageSize}\r\n                       totalItemsCount={this.props.totalUsersCount}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       portionSize={10}\r\n                       isFetching={this.props.isFetching}/>\r\n                       <UsersSearchForm/>\r\n            {this.props.isFetching ?\r\n                <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): UsersMapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<UsersMapStateToPropsType, MapDispatchToPropsType, OwnPropsType, RootStateRedux>\r\n    (mapStateToProps, {follow, unfollow, requestUsers})\r\n)(UsersContainer)"],"sourceRoot":""}
{"version":3,"sources":["assets/images/user-profile-icon-png.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/Profile.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.ts","Components/Profile/Profile.tsx","hoc/WithAuthRedirect.tsx","Components/Profile/ProfileContainer.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileData","profile","fullName","lookingForAJob","lookingForAJobDescription","keys","contacts","map","key","contactTitle","contactValue","Contact","ProfileInfo","isOwner","savePhoto","className","s","item","ava","src","photos","large","userPhoto","alt","type","target","files","Preloader","Post","message","onClick","deletePost","id","delete","like","likesCount","MyPosts","React","memo","postsElements","posts","p","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","required","component","Textarea","text","name","placeholder","button","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","postId","deletePostAC","Profile","mapStateToPropsForRedirect","isAuth","auth","ProfileContainer","userId","this","match","params","String","authorisedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","isFetching","Component","compose","RedirectComponent","Redirect","to","withRouter"],"mappings":"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","file":"static/js/3.63a49935.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-profile-icon-png.b3e90dfe.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__rxeZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__KyvD9\",\"ava\":\"ProfileInfo_ava__2Yzge\",\"job\":\"ProfileInfo_job__1vldL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1TYte\",\"posts\":\"MyPosts_posts__1U0pU\",\"text\":\"MyPosts_text__2pAJb\",\"button\":\"MyPosts_button__1PCPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Kqhl\",\"like\":\"Post_like__1JT1c\",\"delete\":\"Post_delete__15KiY\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\nexport type ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || \"Your status:\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus onBlur={deActivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {ProfileType} from \"../../../../redux/store\";\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../../assets/images/user-profile-icon-png.png\"\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\nexport type ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfilePropsType> = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div className={s.item}>\r\n        <div>\r\n            <img className={s.ava} src={profile.photos.large ? profile.photos.large : userPhoto}\r\n                 alt=\"avatar\"/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        <ProfileData profile={profile}/>\r\n    </div>\r\n}\r\n\r\nconst ProfileData: React.FC<{ profile: ProfileType }> = ({profile}) => {\r\n    return <div>\r\n        {profile &&\r\n        <div>\r\n            <div>\r\n                <h2>{profile.fullName}</h2>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map((key) => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport const Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue &&\r\n            <div>\r\n                <b>{contactTitle}: </b> {contactValue}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    deletePost?: (postId: number) => void\r\n}\r\n\r\nconst Post: React.FC<PostsType> = (props) => {\r\n    const deletePost = () => {\r\n        props.deletePost && props.deletePost(props.id)\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://mygamehunter.ru/images/thumbnail/54027/550\" alt=\"avatar\"/>\r\n            {props.message}\r\n            <div onClick={deletePost} className={s.delete}>Delete post</div>\r\n            <div className={s.like}>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsContainerType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\ntype FormDataType = {\r\n    newPostBody: string\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsContainerType) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post\r\n            key={p.id}\r\n            id={p.id}\r\n            message={p.message}\r\n            likesCount={p.likesCount}\r\n            deletePost={props.deletePost}\r\n        />)\r\n\r\n    let addPost = (values: FormDataType) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLength10]}\r\n                    component={Textarea}\r\n                    className={s.text}\r\n                    name={\"newPostBody\"}\r\n                    placeholder={\"What's new?\"}\r\n                />\r\n            </div>\r\n            <div className={s.button}>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm<FormDataType>({form: \"profileAddPostForm\"})(AddPostForm)\r\nexport default MyPosts;","import {addPostActionCreator, deletePostAC} from '../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes} from \"../../../redux/store\";\r\nimport {RootStateRedux} from \"../../../redux/redux-store\";\r\nimport {PostsType} from \"./Post/Post\";\r\n\r\ntype OwnPropsType = {}\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostBody: string) => void\r\n    deletePost: (postId: number) => void\r\n}\r\n\r\nexport type MyPostsContainerType = OwnPropsType & MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nlet mapStateToProps = (state: RootStateRedux) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\r\n    return {\r\n        addPost: (newPostBody: string) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        },\r\n        deletePost: (postId: number) => {\r\n            dispatch(deletePostAC(postId))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, RootStateRedux>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo, {ProfilePropsType} from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return <div className={s.item}>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     isOwner={props.isOwner}\r\n                     savePhoto={props.savePhoto}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: any) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.FC) => {\r\n\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {ProfileType} from \"../../redux/store\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router'\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isFetching: boolean\r\n    status: string\r\n    authorisedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (UserId: string) => void\r\n    getStatus: (UserId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\ntype ProfileContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype OwnPropsType = {}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = String(this.props.authorisedUserId)\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n            }</>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        authorisedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, RootStateRedux>\r\n    (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto})\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}
{"version":3,"sources":["Components/Login/Login.tsx"],"names":["maxLength40","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","s","formSummaryError","connect","state","isAuth","auth","login","props","to","fomData","email","password","rememberMe"],"mappings":"oIAAA,8FAeMA,EAAcC,YAAiB,IAqB/BC,EAAiBC,YAAwB,CAACC,KAAM,SAA/BD,EApBsC,SAAC,GAInD,IAFHE,EAEE,EAFFA,aACAC,EACE,EADFA,MAEJ,OACI,0BAAMC,SAAUF,GACXG,YAAY,QAAS,QAAS,CAACC,IAAUT,GAAcU,IAAO,KAAM,MACpEF,YAAY,WAAY,WAAY,CAACC,IAAUT,GAAcU,IAAO,KAAM,CAACC,KAAM,aACjFH,YAAY,KAAM,aAAc,KAAME,IAAO,cAAe,CAACC,KAAM,aACnEL,GAAS,yBAAKM,UAAWC,IAAEC,kBACvBR,GAEL,6BACI,8CA4BDS,uBAJS,SAACC,GAAD,MAA4B,CAChDC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EApBD,SAACK,GAIX,OAAIA,EAAMH,OACC,kBAAC,IAAD,CAAUI,GAAI,YAIrB,6BACI,qCACA,kBAACnB,EAAD,CAAgBK,SAVP,SAACe,GACdF,EAAMD,MAAMG,EAAQC,MAAOD,EAAQE,SAAUF,EAAQG","file":"static/js/5.ab274d18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nconst maxLength40 = maxLengthCreator(40)\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (\r\n    {\r\n        handleSubmit,\r\n        error\r\n    }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required, maxLength40], Input, null, null)}\r\n            {createField(\"Password\", \"password\", [required, maxLength40], Input, null, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", null, Input, \"remember me\", {type: \"checkbox\"})}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (fomData: FormDataType) => {\r\n        props.login(fomData.email, fomData.password, fomData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}